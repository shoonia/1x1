import { test } from 'node:test';
import { deepStrictEqual } from 'node:assert/strict';

import type { IRgba } from '../src/store/types.ts';
import { makePixelPng } from '../src/utils/png.ts';

const data: [IRgba, number[]][] = [
  [{ r: 0, g: 0, b: 0, a: 0 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 6, 0, 0, 0, 31, 21, 196, 137, 0, 0, 0, 16, 73, 68, 65, 84, 120, 1, 1, 5, 0, 250, 255, 0, 0, 0, 0, 0, 0, 5, 0, 1, 100, 120, 149, 56, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 255, 'g': 255, 'b': 255, 'a': 255 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 2, 0, 0, 0, 144, 119, 83, 222, 0, 0, 0, 15, 73, 68, 65, 84, 120, 1, 1, 4, 0, 251, 255, 0, 255, 255, 255, 5, 254, 2, 254, 73, 102, 110, 43, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 0, 'g': 0, 'b': 0, 'a': 255 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 2, 0, 0, 0, 144, 119, 83, 222, 0, 0, 0, 15, 73, 68, 65, 84, 120, 1, 1, 4, 0, 251, 255, 0, 0, 0, 0, 0, 4, 0, 1, 101, 73, 195, 96, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 16, 'g': 131, 'b': 161, 'a': 141 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 6, 0, 0, 0, 31, 21, 196, 137, 0, 0, 0, 16, 73, 68, 65, 84, 120, 1, 1, 5, 0, 250, 255, 0, 16, 131, 161, 141, 3, 157, 1, 194, 192, 200, 6, 249, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 43, 'g': 98, 'b': 228, 'a': 255 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 2, 0, 0, 0, 144, 119, 83, 222, 0, 0, 0, 15, 73, 68, 65, 84, 120, 1, 1, 4, 0, 251, 255, 0, 43, 98, 228, 2, 45, 1, 114, 125, 25, 197, 107, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 83, 'g': 213, 'b': 164, 'a': 139 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 6, 0, 0, 0, 31, 21, 196, 137, 0, 0, 0, 16, 73, 68, 65, 84, 120, 1, 1, 5, 0, 250, 255, 0, 83, 213, 164, 139, 5, 163, 2, 88, 200, 59, 197, 182, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 226, 'g': 64, 'b': 70, 'a': 255 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 2, 0, 0, 0, 144, 119, 83, 222, 0, 0, 0, 15, 73, 68, 65, 84, 120, 1, 1, 4, 0, 251, 255, 0, 226, 64, 70, 3, 112, 1, 105, 50, 162, 100, 146, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 152, 'g': 177, 'b': 103, 'a': 7 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 6, 0, 0, 0, 31, 21, 196, 137, 0, 0, 0, 16, 73, 68, 65, 84, 120, 1, 1, 5, 0, 250, 255, 0, 152, 177, 103, 7, 5, 77, 1, 184, 91, 63, 139, 185, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 144, 'g': 219, 'b': 86, 'a': 255 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 2, 0, 0, 0, 144, 119, 83, 222, 0, 0, 0, 15, 73, 68, 65, 84, 120, 1, 1, 4, 0, 251, 255, 0, 144, 219, 86, 3, 192, 1, 194, 218, 78, 80, 226, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 231, 'g': 71, 'b': 108, 'a': 193 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 6, 0, 0, 0, 31, 21, 196, 137, 0, 0, 0, 16, 73, 68, 65, 84, 120, 1, 1, 5, 0, 250, 255, 0, 231, 71, 108, 193, 6, 15, 2, 92, 200, 146, 105, 60, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 219, 'g': 52, 'b': 251, 'a': 255 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 2, 0, 0, 0, 144, 119, 83, 222, 0, 0, 0, 15, 73, 68, 65, 84, 120, 1, 1, 4, 0, 251, 255, 0, 219, 52, 251, 3, 248, 2, 11, 16, 10, 30, 238, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
  [{ 'r': 137, 'g': 2, 'b': 100, 'a': 81 }, [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 6, 0, 0, 0, 31, 21, 196, 137, 0, 0, 0, 16, 73, 68, 65, 84, 120, 1, 1, 5, 0, 250, 255, 0, 137, 2, 100, 81, 3, 72, 1, 65, 44, 181, 112, 123, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]],
];

data.forEach(([rgba, expected], i) => {
  test(`makePixelPng case ${i}`, () => {
    const result = makePixelPng(rgba);
    deepStrictEqual(result, expected);
  });
});
